<local:BrowseControl x:Class="RayCarrot.WPF.BrowseBox"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:local="clr-namespace:RayCarrot.WPF">
    <Grid Name="ControlRoot">
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <TextBox ToolTip="{Binding FilePathToolTip}"
                 TextWrapping="Wrap"
                 MinWidth="100"
                 HorizontalAlignment="Stretch"
                 Name="MainTextField">

            <!-- Context Menu -->

            <TextBox.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="_Cut" Command="Cut"/>
                    <MenuItem Header="_Copy" Command="Copy"/>
                    <MenuItem Header="_Paste" Command="Paste"/>
                    <Separator />
                    <MenuItem Header="_Undo" Command="Undo"/>
                    <Separator />
                    <MenuItem Header="Open Location"
                              Click="ContextMenu_OpenLocation"
                              IsEnabled="{Binding Path=FilePath, Converter={local:PathExistsConverter}}"/>
                </ContextMenu>
            </TextBox.ContextMenu>

            <!-- Style which changes the validation rule -->

            <TextBox.Style>
                <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding PathValidation}" Value="NotEmpty">
                            <Setter Property="Text">
                                <Setter.Value>
                                    <Binding Path="FilePath" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <local:NotEmptyValidationRule ValidatesOnTargetUpdated="True"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding PathValidation}" Value="FileExists">
                            <Setter Property="Text">
                                <Setter.Value>
                                    <Binding Path="FilePath" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <local:FileExistsValidationRule ValidatesOnTargetUpdated="True"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding PathValidation}" Value="FileExistsAndNotEmpty">
                            <Setter Property="Text">
                                <Setter.Value>
                                    <Binding Path="FilePath" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <local:FileExistsAndNotEmptyValidationRule ValidatesOnTargetUpdated="True"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding PathValidation}" Value="DirectoryExists">
                            <Setter Property="Text">
                                <Setter.Value>
                                    <Binding Path="FilePath" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <local:DirectoryExistsValidationRule ValidatesOnTargetUpdated="True"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding PathValidation}" Value="DirectoryExistsAndNotEmpty">
                            <Setter Property="Text">
                                <Setter.Value>
                                    <Binding Path="FilePath" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <local:DirectoryExistsAndNotEmptyValidationRule ValidatesOnTargetUpdated="True"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding PathValidation}" Value="None">
                            <Setter Property="Text" Value="{Binding Path=FilePath, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <Button Grid.Column="1"
                IsEnabled="{Binding Path=CanBrowse}"
                Click="BrowseFile" 
                Padding="2"
                Margin="10 0 0 0"
                Content="Browse"
                DragEnter="BrowseButton_DragEnter"
                Drop="BrowseButton_Drop"
                AllowDrop="True"/>
    </Grid>
</local:BrowseControl>